name: Release
on:
  workflow_dispatch:

jobs:
  build-and-test:
    uses: ./.github/workflows/build-and-test.yaml
    secrets:
      SIEMENS_NPM_TOKEN: ${{ secrets.SIEMENS_NPM_TOKEN }}
      SIEMENS_NPM_USER: ${{ secrets.SIEMENS_NPM_USER }}
      MAPTILER_KEY: ${{ secrets.MAPTILER_KEY }}

  publish:
    runs-on: ubuntu-24.04
    needs:
      - build-and-test
    outputs:
      new_release: ${{ steps.check_release.outputs.new_release }}
      release_tag: ${{ steps.check_release.outputs.release_tag }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0 # semantic-release needs this
          token: ${{ secrets.ELEMENT_BOT_GITHUB_TOKEN }} # Otherwise, branch protection rules are not bypassed.
      - uses: actions/setup-node@v5
        with:
          node-version: lts/jod
          cache: 'npm'
      - uses: actions/download-artifact@v5
        with:
          name: dist
          path: dist
      - run: npm ci --prefer-offline --no-audit

      - name: Get tag before semantic-release
        id: before_release
        run: |
          BEFORE_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          echo "before_tag=$BEFORE_TAG" >> $GITHUB_OUTPUT

      - run: npx semantic-release
        env:
          GIT_AUTHOR_NAME: 'Siemens Element Bot'
          GIT_AUTHOR_EMAIL: 'simpl.si@siemens.com'
          GIT_COMMITTER_NAME: 'Siemens Element Bot'
          GIT_COMMITTER_EMAIL: 'simpl.si@siemens.com'
          GITHUB_TOKEN: ${{ secrets.ELEMENT_BOT_GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Check if new release was created
        id: check_release
        run: |
          AFTER_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          BEFORE_TAG="${{ steps.before_release.outputs.before_tag }}"

          if [[ -n "$AFTER_TAG" && "$AFTER_TAG" != "$BEFORE_TAG" ]]; then
            echo "release_tag=$AFTER_TAG" >> $GITHUB_OUTPUT
            echo "new_release=true" >> $GITHUB_OUTPUT
          else
            echo "new_release=false" >> $GITHUB_OUTPUT
            echo "release_tag=" >> $GITHUB_OUTPUT
          fi

  trigger-documentation:
    uses: ./.github/workflows/publish-documentation.yaml
    needs:
      - publish
      - build-and-test
    if: success() && needs.publish.outputs.new_release == 'true'
    with:
      deploy_as_release: ${{ needs.publish.outputs.release_tag }}
      skip_build: true
