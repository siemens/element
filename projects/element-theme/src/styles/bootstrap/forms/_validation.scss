@use '../../variables/spacers';
@use '../../variables/typography';
@use '../variables';

@use 'sass:map';

// Override/enhance the form validation state mixin to also account for class
// names provided by AngularÂ´s validation.
//
// Note: the '.was-validated' selector used by Bootstrap is supposed to live
// on the wrapping '<form>' element, so decide if this should be changed to
// an appropriate Angular class that may get applied to a form after save.
@mixin form-validation-state-selector($state) {
  @if ($state == 'invalid') {
    .was-validated &:#{$state},
    &.ng-touched.ng-#{$state},
    &.is-#{$state} {
      @content;
    }
  } @else {
    &.is-#{$state} {
      @content;
    }
  }
}

%state-feedback {
  font-size: variables.$form-feedback-font-size;
  display: none;
  inline-size: 100%;
  line-height: typography.$si-line-height-caption;
  margin-block: map.get(spacers.$spacers, 1);
  margin-inline: map.get(spacers.$spacers, 1);
}

@mixin form-validation-state-enh($state, $color, $icon, $text-color) {
  .#{$state}-feedback {
    @extend %state-feedback;
    color: $text-color;
  }

  :is(.form-control, .form-select, .form-control-wrapper) {
    @include form-validation-state-selector($state) {
      @if ($state and $icon) {
        --si-feedback-icon: #{$icon};
        --si-feedback-icon-offset: 1.5rem;
      }

      @if $color {
        &:not(.no-validation):not(:hover),
        &:not(.no-validation):focus {
          --border-color: #{$color};
        }
      }

      ~ .#{$state}-feedback {
        display: flex !important; // stylelint-disable-line declaration-no-important
        flex-direction: column;
      }
    }
  }

  .form-control-file {
    @include form-validation-state-selector($state) {
      ~ .#{$state}-feedback {
        display: block;
      }
    }
  }

  .form-check-input {
    @include form-validation-state-selector($state) {
      ~ .#{$state}-feedback {
        display: block;
      }
    }
  }

  .form-custom-control {
    @include form-validation-state-selector($state) {
      ~ .#{$state}-feedback {
        display: block;
      }
    }
  }
}

@each $state, $data in variables.$form-validation-states {
  @include form-validation-state-enh(
    $state,
    map.get($data, color),
    map.get($data, icon),
    map.get($data, text-color)
  );
}
