@use 'sass:map';
@use '@siemens/element-theme/src/styles/variables';

:host {
  display: block;
  --chat-message-bubble-bg: #{variables.$element-base-1};
  --chat-message-bubble-padding: #{map.get(variables.$spacers, 5)};
}

:host ::ng-deep si-loading-spinner {
  --loading-spinner-size: 1.5em;
}

.skeleton-line-full {
  inline-size: 100%;
}

.skeleton-line-half {
  inline-size: 50%;
}

.loading-message-bubble,
.message-bubble {
  padding: var(--chat-message-bubble-padding);
}

.loading-message-bubble {
  inline-size: max-content;
  min-inline-size: 75%;
  margin-block-end: auto;
  background-color: var(--chat-message-bubble-bg);
}

.message-bubble {
  margin-block-end: auto;
  background-color: var(--chat-message-bubble-bg);
  min-inline-size: 0;
  overflow-wrap: break-word;
  word-break: break-word;

  &:empty {
    display: none;

    ~ .actions-wrapper {
      // stylelint-disable-next-line declaration-no-important
      margin-inline: 0 !important;
    }
  }
}

.message-wrapper {
  min-inline-size: 0;
}

.attachment-slot {
  &:empty {
    display: none;
  }

  &:not(:empty) ~ .message-wrapper:not(:has(.message-bubble:empty)) {
    margin-block-start: map.get(variables.$spacers, 2);
  }

  &:not(:empty) ~ .message-wrapper:has(.message-bubble:empty) .actions-wrapper.actions-horizontal {
    // Since it will be on the bottom of the attachment (but is not in bottom mode), we need some spacing
    margin-block-start: map.get(variables.$spacers, 2);
  }
}

.actions-wrapper:empty {
  // stylelint-disable-next-line declaration-no-important
  display: none !important;
}

.avatar-wrapper {
  align-self: flex-start;

  &:not(.end) {
    margin-inline-end: map.get(variables.$spacers, 3);
  }

  &.end {
    margin-inline-start: map.get(variables.$spacers, 3);
  }

  &:empty {
    display: none;
  }
}

:host-context(.si-container-md, .si-container-lg, .si-container-xl, .si-container-xxl) {
  .chat-message-container {
    flex-direction: row;

    &.start {
      align-items: flex-start;
    }

    &:not(.start) {
      flex-direction: row-reverse;
    }
  }

  .message-wrapper {
    min-inline-size: 0;
    inline-size: auto;

    &.end {
      margin-inline-start: auto;
      display: flex;
      flex-direction: column;
      align-items: flex-end;
    }
  }

  .message-bubble.end {
    margin-inline-start: auto;
  }
}

.attachment-slot ::ng-deep si-attachment-list {
  --attachment-list-bg: transparent;
  --attachment-name-color: #{variables.$element-text-secondary};
}

:host-context(.si-container-xs, .si-container-sm) {
  .message-wrapper {
    min-inline-size: 0;

    &.end {
      margin-inline-start: auto;
    }
  }

  .chat-message-container {
    flex-direction: column;
  }

  .avatar-wrapper {
    margin-block-end: map.get(variables.$spacers, 3);

    &.end {
      align-self: flex-end;
    }
  }

  .avatar-wrapper::ng-deep:has(si-icon) {
    &.end {
      // stylelint-disable-next-line declaration-no-important
      margin-inline-end: map.get(variables.$spacers, 2) !important;
    }

    &:not(.end) {
      // stylelint-disable-next-line declaration-no-important
      margin-inline-start: map.get(variables.$spacers, 2) !important;
    }
  }
}
